import { ReactNode } from "react";
import { twMerge } from "tailwind-merge";
import { useLatestDataByTag } from "@/queries/use-latest-data-by-tag";
import { ErrorComponent } from "./error-display";
import { OverviewCard } from "./overview-card";

const navigationItems = [
  { title: "LATITUDE", tag: "V_GPSLAT_act_deg@LAST", icon: <LattitudeIcon /> },
  { title: "LONGITUDE", tag: "V_GPSLON_act_deg@LAST", icon: <LongitudeIcon /> },
  { title: "GYRO", tag: "V_HDG_act_deg@AVG", icon: <GyroIcon /> },
  { title: "SPEED", tag: "V_STW_act_kn@AVG", icon: <SpeedIcon /> },
  { title: "WIND SPEED", tag: "WEA_WSR_act_kn@AVG", icon: <WindSpeedIcon /> },
  {
    title: "WIND DIRECTION",
    tag: "WEA_WDR_act_deg@AVG",
    icon: <WindDirectionIcon />
  }
];

export const NavigationParametersDataCardList = () => {
  return (
    <OverviewCard className="flex flex-col justify-between gap-1 p-2.5 lg:mt-[-3px] lg:h-[218px] xl:mt-0 xl:h-[220px] xl:w-[286px] 3xl:mt-0 3xl:h-[299px] 3xl:w-[443px]">
      {navigationItems.map(item => (
        <NavigationParameterItem
          key={item.title}
          title={item.title}
          icon={item.icon}
          tag={item.tag}
        />
      ))}
    </OverviewCard>
  );
};

function NavigationParameterItem({
  title,
  icon,
  tag
}: {
  title: string;
  tag: string;
  icon: ReactNode;
}) {
  const { data, error, refetch } = useLatestDataByTag(tag);

  return (
    <div className="relative flex h-[40px] w-full rounded-[11px] bg-[linear-gradient(90deg,_#383838_0%,_#8F8F8F_27.4%,_#2E2E2E_55.29%,_#8E8E8E_76.92%,_#484848_100%)] p-[1px]">
      <div className="flex h-full w-full gap-2 rounded-[10px] bg-[#141414] 3xl:p-[3px]">
        <div className="grid h-full w-full grid-cols-[min-content_1.5fr_10px_1fr] items-center gap-3 rounded-[7px] bg-[#010101] px-4 font-russo">
          {icon}
          <p className="lg:text-[11px] xl:text-[10px] 3xl:text-base">
            {title}{" "}
          </p>
          <p className="lg:text-[12px] xl:text-[15px] 3xl:text-xl">:</p>
          <p className="ml-2 lg:text-[12px] xl:text-[15px] 3xl:text-xl">
            {data?.value ?? "__"}
          </p>
        </div>
      </div>
      {error && <ErrorComponent key={label} error={error.message} refetch={refetch} />}
    </div>
  );
}

export function LattitudeIcon({ className }: { className?: string }) {
  return (
    <svg
      className={twMerge("", className)}
      width="18"
      height="18"
      viewBox="0 0 18 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_1752_4455)">
        <path
          d="M16.5 9C16.5 4.85775 13.1422 1.5 9 1.5C4.85775 1.5 1.5 4.85775 1.5 9M16.5 9C16.5 13.1422 13.1422 16.5 9 16.5C4.85775 16.5 1.5 13.1422 1.5 9M16.5 9H1.5M15 5.25H3M15 12.75H3"
          stroke="white"
          strokeWidth="1.5"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </g>
      <defs>
        <clipPath id="clip0_1752_4455">
          <rect width="18" height="18" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}

export function LongitudeIcon() {
  return (
    <svg
      width="18"
      height="18"
      viewBox="0 0 18 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9 1.5C7.51664 1.5 6.0666 1.93987 4.83323 2.76398C3.59986 3.58809 2.63856 4.75943 2.07091 6.12987C1.50325 7.50032 1.35472 9.00832 1.64411 10.4632C1.9335 11.918 2.64781 13.2544 3.6967 14.3033C4.7456 15.3522 6.08197 16.0665 7.53683 16.3559C8.99168 16.6453 10.4997 16.4968 11.8701 15.9291C13.2406 15.3614 14.4119 14.4001 15.236 13.1668C16.0601 11.9334 16.5 10.4834 16.5 9C16.4941 7.0127 15.702 5.10849 14.2967 3.70326C12.8915 2.29802 10.9873 1.50594 9 1.5ZM7.05 14.7C5.86749 14.2871 4.84267 13.5166 4.11753 12.4953C3.39239 11.4741 3.00283 10.2525 3.00283 9C3.00283 7.74747 3.39239 6.52594 4.11753 5.50466C4.84267 4.48338 5.86749 3.71291 7.05 3.3C6.12292 5.05752 5.63406 7.01297 5.625 9C5.63406 10.987 6.12292 12.9425 7.05 14.7ZM9 15C7.76807 13.2428 7.11284 11.146 7.125 9C7.11284 6.85398 7.76807 4.75724 9 3C10.2319 4.75724 10.8872 6.85398 10.875 9C10.8872 11.146 10.2319 13.2428 9 15ZM10.95 14.7C11.8856 12.9457 12.375 10.9882 12.375 9C12.375 7.01184 11.8856 5.05426 10.95 3.3C12.1343 3.71052 13.161 4.4803 13.8869 5.50205C14.6129 6.5238 15.002 7.7466 15 9C15.0168 10.2568 14.6335 11.4865 13.9055 12.5111C13.1774 13.5358 12.1424 14.3023 10.95 14.7Z"
        fill="white"
      />
    </svg>
  );
}

export function GyroIcon() {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M8.62081 2.47656C8.63253 2.47656 8.64425 2.47266 8.65206 2.47266C11.1442 2.04688 13.5935 3.28125 15.1052 5.47266L14.5778 5.85547C13.3083 4.17578 11.3552 3.22656 9.35909 3.57031C6.33565 4.08984 4.39034 7.35937 4.988 10.8516C5.58956 14.3398 8.51143 16.7578 11.5388 16.25C13.5349 15.8984 15.0583 14.3711 15.695 12.3633L16.32 12.5469C15.7185 14.7773 14.2067 16.5625 12.1911 17.2656L12.3474 19.4531L11.4763 17.5C11.3982 17.5 11.3161 17.5 11.238 17.5391C7.64815 18.125 4.12862 15.2891 3.41339 11.1211C2.74503 7.22656 4.76534 3.59375 7.96456 2.63281L7.46456 0.558594L8.28487 0.546875L8.62081 2.47656ZM14.1482 12.5039C13.4567 12.75 12.82 12.9062 12.3396 13.0039C12.2614 13.1992 12.1677 13.3828 12.0661 13.543C11.7536 14.0352 11.3396 14.3516 10.8396 14.3867C10.4685 14.4102 10.0974 14.2734 9.75362 14.0273L9.33956 14.5273C9.99972 15.1445 10.7497 15.4688 11.4997 15.4141C12.2888 15.3633 12.9724 14.9023 13.4724 14.1445C13.7692 13.6953 13.9997 13.1367 14.1482 12.5039ZM2.91026 11.7305C2.74581 11.8477 2.61729 11.957 2.52784 12.0625C2.33175 12.2891 2.2837 12.5078 2.32745 12.6914C2.36573 12.8516 2.47745 13.0039 2.688 13.1133C2.84542 13.1953 3.07745 13.2617 3.3755 13.3008C3.16768 12.7891 3.01456 12.2617 2.91026 11.7305ZM6.488 12.1875C6.62472 12.5273 6.77706 12.832 6.9294 13.1016C7.96065 12.9492 9.1169 12.7266 10.3317 12.4375C13.1989 11.75 15.6208 10.8711 16.7575 10.1641C17.0935 9.95703 17.3278 9.75781 17.4528 9.58203C17.5896 9.38672 17.6208 9.20312 17.5817 9.04297C17.5388 8.85938 17.3942 8.68359 17.1169 8.57031C16.7341 8.41406 15.9958 8.35547 15.0114 8.41016L15.0349 9.05859C15.4489 9.05469 15.7888 9.07812 16.0271 9.13281C16.0857 9.14453 16.1442 9.17188 16.1911 9.19141L16.1794 9.20312C16.0896 9.30469 15.945 9.41016 15.7614 9.52344C14.7614 10.1445 12.6286 10.9062 10.1091 11.5117C8.78878 11.8281 7.54268 12.0547 6.488 12.1875ZM11.4138 10.2969L11.1599 9.27734C6.71065 9.00781 4.32393 10.8477 8.83956 10.9219L11.4138 10.2969ZM12.6052 9.82031L14.195 9.26953C13.9021 7.64453 13.195 6.25 12.3161 5.38672C11.6364 4.72266 10.8552 4.36719 10.0778 4.42188C8.74581 4.51172 7.70675 5.78516 7.3669 7.63281L7.99972 7.77734C8.28487 6.71094 8.8669 5.94922 9.66768 5.89453C10.1755 5.85938 10.6794 6.12109 11.1247 6.57031C11.8357 7.28516 12.3903 8.46094 12.6052 9.82031Z"
        fill="white"
      />
    </svg>
  );
}

export function SpeedIcon() {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M8.70573 12.9163C9.03906 13.2497 9.46962 13.413 9.9974 13.4063C10.5252 13.3997 10.9141 13.2086 11.1641 12.833L15.8307 5.83301L8.83073 10.4997C8.45573 10.7497 8.25795 11.1316 8.2374 11.6455C8.21684 12.1594 8.37295 12.583 8.70573 12.9163ZM9.9974 3.33301C10.8168 3.33301 11.6052 3.44745 12.3624 3.67634C13.1196 3.90523 13.8313 4.24912 14.4974 4.70801L12.9141 5.70801C12.4557 5.4719 11.9802 5.29495 11.4874 5.17717C10.9946 5.0594 10.498 5.00023 9.9974 4.99967C8.15017 4.99967 6.57712 5.64912 5.27823 6.94801C3.97934 8.2469 3.33017 9.81967 3.33073 11.6663C3.33073 12.2497 3.41073 12.8261 3.57073 13.3955C3.73073 13.965 3.95628 14.4997 4.2474 14.9997H15.7474C16.0668 14.4719 16.2996 13.9233 16.4457 13.3538C16.5918 12.7844 16.6646 12.1941 16.6641 11.583C16.6641 11.083 16.6049 10.5969 16.4866 10.1247C16.3682 9.65245 16.1913 9.19412 15.9557 8.74967L16.9557 7.16634C17.3724 7.81912 17.7024 8.51356 17.9457 9.24967C18.1891 9.98579 18.3174 10.7497 18.3307 11.5413C18.3441 12.333 18.2538 13.09 18.0599 13.8122C17.866 14.5344 17.5813 15.2219 17.2057 15.8747C17.053 16.1247 16.8446 16.3191 16.5807 16.458C16.3168 16.5969 16.0391 16.6663 15.7474 16.6663H4.2474C3.95573 16.6663 3.67795 16.5969 3.41406 16.458C3.15017 16.3191 2.94184 16.1247 2.78906 15.8747C2.42795 15.2497 2.15017 14.5866 1.95573 13.8855C1.76128 13.1844 1.66406 12.4447 1.66406 11.6663C1.66406 10.5136 1.88295 9.43384 2.32073 8.42717C2.75851 7.42051 3.35573 6.53856 4.1124 5.78134C4.86906 5.02412 5.75434 4.4269 6.76823 3.98967C7.78212 3.55245 8.85851 3.33356 9.9974 3.33301Z"
        fill="white"
      />
    </svg>
  );
}

export function WindSpeedIcon() {
  return (
    <svg
      width="19"
      height="19"
      viewBox="0 0 19 19"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M4.95052 4.35417C4.95052 3.84529 5.10142 3.34785 5.38414 2.92473C5.66685 2.50162 6.06869 2.17184 6.53882 1.9771C7.00896 1.78236 7.52629 1.73141 8.02539 1.83069C8.52449 1.92997 8.98293 2.17501 9.34276 2.53484C9.70259 2.89467 9.94764 3.35312 10.0469 3.85222C10.1462 4.35131 10.0952 4.86864 9.9005 5.33878C9.70576 5.80892 9.37599 6.21075 8.95287 6.49347C8.52976 6.77619 8.03231 6.92708 7.52344 6.92708H2.3776C2.22013 6.92708 2.06911 6.86453 1.95776 6.75318C1.84641 6.64183 1.78385 6.49081 1.78385 6.33333C1.78385 6.17586 1.84641 6.02484 1.95776 5.91349C2.06911 5.80214 2.22013 5.73958 2.3776 5.73958H7.52344C7.79745 5.73958 8.0653 5.65833 8.29313 5.5061C8.52096 5.35387 8.69854 5.1375 8.80339 4.88434C8.90825 4.63119 8.93569 4.35263 8.88223 4.08389C8.82878 3.81514 8.69683 3.56828 8.50308 3.37453C8.30932 3.18078 8.06246 3.04883 7.79372 2.99537C7.52497 2.94192 7.24641 2.96935 6.99326 3.07421C6.74011 3.17907 6.52374 3.35664 6.37151 3.58447C6.21927 3.8123 6.13802 4.08016 6.13802 4.35417V4.63679C6.13802 4.79427 6.07547 4.94529 5.96412 5.05664C5.85277 5.16799 5.70174 5.23054 5.54427 5.23054C5.3868 5.23054 5.23578 5.16799 5.12443 5.05664C5.01308 4.94529 4.95052 4.79427 4.95052 4.63679V4.35417ZM11.2839 5.9375C11.2839 5.27205 11.4812 4.62154 11.8509 4.06824C12.2206 3.51494 12.7461 3.08369 13.3609 2.82903C13.9757 2.57437 14.6522 2.50774 15.3048 2.63757C15.9575 2.76739 16.557 3.08784 17.0276 3.55838C17.4981 4.02893 17.8185 4.62844 17.9484 5.2811C18.0782 5.93377 18.0116 6.61027 17.7569 7.22507C17.5022 7.83987 17.071 8.36535 16.5177 8.73505C15.9644 9.10476 15.3139 9.30208 14.6484 9.30208H1.58594C1.42847 9.30208 1.27744 9.23953 1.16609 9.12818C1.05474 9.01683 0.992188 8.86581 0.992188 8.70833C0.992188 8.55086 1.05474 8.39984 1.16609 8.28849C1.27744 8.17714 1.42847 8.11458 1.58594 8.11458H14.6484C15.079 8.11458 15.4999 7.9869 15.858 7.74768C16.216 7.50846 16.495 7.16845 16.6598 6.77064C16.8246 6.37283 16.8677 5.93509 16.7837 5.51277C16.6997 5.09046 16.4923 4.70254 16.1879 4.39807C15.8834 4.0936 15.4955 3.88625 15.0732 3.80225C14.6509 3.71825 14.2131 3.76136 13.8153 3.92614C13.4175 4.09092 13.0775 4.36996 12.8383 4.72798C12.599 5.086 12.4714 5.50691 12.4714 5.9375V6.33333C12.4714 6.49081 12.4088 6.64183 12.2974 6.75318C12.1861 6.86453 12.0351 6.92708 11.8776 6.92708C11.7201 6.92708 11.5691 6.86453 11.4578 6.75318C11.3464 6.64183 11.2839 6.49081 11.2839 6.33333V5.9375ZM2.57552 11.0833C2.57552 10.9259 2.63808 10.7748 2.74943 10.6635C2.86078 10.5521 3.0118 10.4896 3.16927 10.4896H14.6484C15.3139 10.4896 15.9644 10.6869 16.5177 11.0566C17.071 11.4263 17.5022 11.9518 17.7569 12.5666C18.0116 13.1814 18.0782 13.8579 17.9484 14.5106C17.8185 15.1632 17.4981 15.7627 17.0276 16.2333C16.557 16.7038 15.9575 17.0243 15.3048 17.1541C14.6522 17.2839 13.9757 17.2173 13.3609 16.9626C12.7461 16.708 12.2206 16.2767 11.8509 15.7234C11.4812 15.1701 11.2839 14.5196 11.2839 13.8542V13.4583C11.2839 13.3009 11.3464 13.1498 11.4578 13.0385C11.5691 12.9271 11.7201 12.8646 11.8776 12.8646C12.0351 12.8646 12.1861 12.9271 12.2974 13.0385C12.4088 13.1498 12.4714 13.3009 12.4714 13.4583V13.8542C12.4714 14.2848 12.599 14.7057 12.8383 15.0637C13.0775 15.4217 13.4175 15.7008 13.8153 15.8655C14.2131 16.0303 14.6509 16.0734 15.0732 15.9894C15.4955 15.9054 15.8834 15.6981 16.1879 15.3936C16.4923 15.0891 16.6997 14.7012 16.7837 14.2789C16.8677 13.8566 16.8246 13.4188 16.6598 13.021C16.495 12.6232 16.216 12.2832 15.858 12.044C15.4999 11.8048 15.079 11.6771 14.6484 11.6771H3.16927C3.0118 11.6771 2.86078 11.6145 2.74943 11.5032C2.63808 11.3918 2.57552 11.2408 2.57552 11.0833Z"
        fill="white"
      />
    </svg>
  );
}

export function WindDirectionIcon() {
  return (
    <svg
      width="15"
      height="15"
      viewBox="0 0 15 15"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_1752_4463)">
        <path
          d="M14.1643 4.36758L11.5405 1.55508C11.4965 1.50812 11.4433 1.47068 11.3843 1.44508C11.3253 1.41948 11.2617 1.40627 11.1973 1.40625H7.28444L7.26967 0.439453C7.26967 0.196875 7.05967 0 6.80092 0C6.54217 0 6.36147 0.196875 6.36147 0.439453L6.34719 1.40625H1.17969C0.920703 1.40625 0.710938 1.61602 0.710938 1.875V7.5C0.710938 7.75898 0.920703 7.96875 1.17969 7.96875H6.34086V14.5605C6.34086 14.8031 6.55086 15 6.80961 15C7.06836 15 7.27836 14.8031 7.27836 14.5605V7.96875H11.1973C11.3274 7.96875 11.4514 7.91484 11.5402 7.81992L14.1641 5.00742C14.3321 4.82719 14.3321 4.54781 14.1643 4.36758ZM10.9937 7.03125H1.64842V2.34375H10.9937L13.1804 4.6875L10.9937 7.03125Z"
          fill="white"
        />
      </g>
      <defs>
        <clipPath id="clip0_1752_4463">
          <rect width="15" height="15" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}
